name: Test

on:
  push:
    branches:
      - "*"
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            ${{ env.pythonLocation }}
            .venv
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --with dev
      - name: Lint
        run: make lint
      - name: Type Checking
        run: make type-check
      - name: General Static Analysis
        run: make static-analysis
      - name: Test
        run: make test
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/coverage.xml