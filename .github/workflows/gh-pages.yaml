name: Publish GitHUb Pages

on:
  push:
    branches:
      - 'feature/documentation'
      - 'main'

jobs:
  deploy:
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            ${{ env.pythonLocation }}
            .venv
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --with dev --with docs --all-extras
      - name: Verifing example code
        run: find ./docs/src -name "*.py"  -exec poetry run mypy '{}' \;
      - name: Building Pages
        run: poetry run mkdocs build --site-dir "$RUNNER_TEMP/public"
        working-directory: ./docs
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: ${{ runner.temp }}/public
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1